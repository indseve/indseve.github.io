(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{596:function(a,s,e){a.exports=e.p+"assets/img/03-1.77a4a89d.gif"},714:function(a,s,e){"use strict";e.r(s);var t=e(7),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("img",{attrs:{src:e(596),alt:"image"}})]),a._v(" "),t("p",[a._v("作为一个轻度使用者，应读者要求，斗胆介绍一下makefile，不过与普通的makfile教程不同的是，本文准备从另外一个角度来介绍。如有不妥之处，欢迎指出。")]),a._v(" "),t("h2",{attrs:{id:"makefie到底是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefie到底是什么"}},[a._v("#")]),a._v(" makefie到底是什么")]),a._v(" "),t("p",[a._v("在Linux下，对于下面这个简单的程序")]),a._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//main.c")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("<math.h>")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("pow")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"10^4 = %d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br")])]),t("p",[a._v("我们通常使用gcc就可以编译得到想要的程序了：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ gcc -o main main.c -lm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("（如果不理解为什么要加-lm，请参考《"),t("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI2OTA3NTk3Ng%3D%3D%26mid%3D2649284434%26idx%3D2%26sn%3D9f6751b081c604cc327f5c4234d074ca%26chksm%3Df2f9ac35c58e2523562d31aa93934d90076a50aa388d7bf2474b80f5582a37bc5e86aeaff525%26scene%3D21%23wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[a._v("一个奇怪的链接问题"),t("OutboundLink")],1),a._v("》）。")]),a._v(" "),t("p",[a._v("对于单个文件的简单程序，一条命令就可以直接搞定了（编译+连接），但是如果是一个复杂的工程，可能有成千上万个文件，然后需要链接大量的动态或静态库。试想一下，你还想一条一条命令执行吗？"),t("strong",[a._v("懒惰的基因是刻在程序员骨子里的")]),a._v("。")]),a._v(" "),t("p",[a._v("因此你可能会想，那我写个脚本好了。嗯，听起来好多了。")]),a._v(" "),t("p",[a._v("文件多就多，你告诉我要编译哪里的文件，我遍历一下就好了，你再告诉我要链接哪些库，我一一帮你链接上就好了。")]),a._v(" "),t("p",[a._v("然而到这里又会想，既然编译链接都是这么类似的过程，能不能给它们写一些通用的规则，搞得这么复杂干嘛？然后按照规则去执行就好了。")]),a._v(" "),t("p",[a._v("而makefile就是这样的一个规则文件，make是规则的解释执行者。可以类比shell脚本和bash解释程序的关系。")]),a._v(" "),t("p",[a._v("所以，makefile并不仅仅用于编译链接，只不过它非常适合用于编译链接。")]),a._v(" "),t("h2",{attrs:{id:"makefile什么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefile什么样"}},[a._v("#")]),a._v(" makefile什么样？")]),a._v(" "),t("p",[a._v("它最重要的规则语法如下：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("prerequisites"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("tab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commands"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("咋一看，就这么个玩意？但是什么意思？")]),a._v(" "),t("ul",[t("li",[a._v("target 要生成的目标文件名称")]),a._v(" "),t("li",[a._v("要依赖的文件")]),a._v(" "),t("li",[a._v("[tab] 对，就是tab键，初学者很容易忽略这个问题，请用tab")]),a._v(" "),t("li",[a._v("要执行的指令")])]),a._v(" "),t("p",[a._v("关键内容就这些，但是要细讲会有很多内容，本文仅举个简单的例子。假设要将前面的main.c复制名为pow.c的文件。\n那么我们可以得到：")]),a._v(" "),t("ul",[t("li",[a._v("target: pow.c 目标名称")]),a._v(" "),t("li",[a._v("prerequisites：main.c，即得到pow.c需要有main.c")]),a._v(" "),t("li",[a._v("commands：cp main.c pow.c")])]),a._v(" "),t("p",[a._v("因此我们得到我们的makefile文件内容如下：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("pow.c:main.c\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" main.c pow.c\nclean:\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" pow.c\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("假设当前目录下没有main.c文件，然后在当前目录下执行：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" pow.c\nmake: *** No rule to "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" target "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("main.c', needed by "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("pow.c'.  Stop.\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("我们发现会报错，因为你要依赖的文件找不到，而且也没有其他规则能够生成它。")]),a._v(" "),t("p",[a._v("现在把main.c放在当前目录下后继续执行：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" main.c pow.c\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("看见没有，执行完make命令之后，我们的pow.c文件终于有了。")]),a._v(" "),t("p",[a._v("而执行下面的命令后：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" clean\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" pow.c\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("你就会发现pow.c被删除了。")]),a._v(" "),t("p",[a._v("如果当前目录有clean文件会发生什么？")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" clean\nmake: `clean' is up to date.\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("至于原因，后面会讲到。")]),a._v(" "),t("p",[a._v("这里注意，如果你的makefile文件的文件名不是makefile，那么就需要指定具体名字，例如假设前面的文件名为test.txt：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" -f test.txt\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("以上例子介绍了makefile使用的基本流程，生成目标，清除目标。然而实际上这里面的门道还有很多，例如伪目标，自动推导，隐晦规则，变量定义。本文作为认识性的文章暂时不具体介绍。")]),a._v(" "),t("p",[a._v("总结来说就是，给规则，按照规则生成目标。")]),a._v(" "),t("h2",{attrs:{id:"makefile做了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefile做了什么"}},[a._v("#")]),a._v(" makefile做了什么？")]),a._v(" "),t("p",[a._v("网上有很多教程介绍如何编写makefile的，很多也非常不错。不过本文换个角度来说。")]),a._v(" "),t("p",[a._v("既然我们要学makefile，那么就需要知道构建C/C++项目的时候，它应该做什么？然后再去学习如何编写makefile。")]),a._v(" "),t("p",[a._v("实际上它主要做的事情也很清楚，那就是编译和链接。这个在《"),t("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI2OTA3NTk3Ng%3D%3D%26mid%3D2649283927%26idx%3D1%26sn%3Df43e4271218a7ce14d75f8b9bdbae1ad%26chksm%3Df2f9ae30c58e2726ed7c53f503918fbd742243e8b3e490fc5207eaf7b538e5487f77bcfab85b%26scene%3D21%23wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[a._v("helo程序是如何编程可执行文件的"),t("OutboundLink")],1),a._v("》中已经有所介绍，还不了解的朋友可以简单了解一下。那么放到makefile中具体要做什么呢？")]),a._v(" "),t("ul",[t("li",[a._v("将源代码文件编译成可重定位目标文件.o（参考《"),t("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI2OTA3NTk3Ng%3D%3D%26mid%3D2649284771%26idx%3D1%26sn%3Da18cbf1c8d3ca57c5aa875fcf592878c%26chksm%3Df2f993c4c58e1ad219a6ba5ddc3afef1702b5ebb1b8de98664048e8941aa64a8103d8cf6184a%26scene%3D21%23wechat_redirect%E3%80%8B",target:"_blank",rel:"noopener noreferrer"}},[a._v("静态库和动态库的区别"),t("OutboundLink")],1),a._v("）")]),a._v(" "),t("li",[a._v("设置编译器选项，例如是否开启优化，传递宏，打开警告等")]),a._v(" "),t("li",[a._v("链接，将静态库或动态库与目标文件链接\n所以问题就变成了，如何利用makefile的语法规则快速的将成千上万的.c编译成.o，并且正确链接到需要的库。")])]),a._v(" "),t("p",[a._v("而如果用makefile应该怎么写才能得到我们的程序呢？为了帮助说明，我们把前面的编译命令拆分为两条：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ gcc -g -Wall -c main.c -o main.o\n$ gcc -o main main.o -lm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"设置编译器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置编译器"}},[a._v("#")]),a._v(" 设置编译器")]),a._v(" "),t("p",[a._v("由于我们使用的是gcc编译器（套件），因此可以像下面这样写：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CC")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("gcc\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("为了扩展性考虑，常常将编译器定义为某个变量，后面使用的时候就会方便很多。")]),a._v(" "),t("h3",{attrs:{id:"设置编译选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置编译选项"}},[a._v("#")]),a._v(" 设置编译选项")]),a._v(" "),t("p",[a._v("比如我们要设置-g选项用来调试，设置-Wall选项来输出更多警告信息。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-g -Wall\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"设置链接库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置链接库"}},[a._v("#")]),a._v(" 设置链接库")]),a._v(" "),t("p",[a._v("我们这里只用到了libm.so库")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LIBS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-lm\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[a._v("#")]),a._v(" 编译")]),a._v(" "),t("p",[a._v("我们的目标文件是main.o依赖main.c，该规则应该是这样的：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("OBJ")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main.o\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":main.c\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -c main.c -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("这样就得到了我们的目标文件。")]),a._v(" "),t("h3",{attrs:{id:"链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[a._v("#")]),a._v(" 链接")]),a._v(" "),t("p",[a._v("接下来就需要将目标文件和库文件链接在一起了。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TARGET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("target"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":main.o\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("TARGET"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("LIBS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("而为了使用make clean，即通常用于清除这些中间文件，因此需要加一个伪目标clean：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v(".PHONY:clean\nclean:\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("TARGET"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("伪目标的意思是，它不是一个真正的要生成的目标文件，.PHONY:clean说明了clean是一个伪目标。在这种情况下，即使当前目录下有clean文件，它也仍然会执行后面的指令。")]),a._v(" "),t("p",[a._v("否则如果当前目录下有clean文件，将不会执行rm动作，而认为目标文件已经是最新的了。")]),a._v(" "),t("h3",{attrs:{id:"完整内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完整内容"}},[a._v("#")]),a._v(" 完整内容")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CC")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("gcc\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-g -Wall\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LIBS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-lm\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("OBJ")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main.o\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":main.c\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -c main.c -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("TARGET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("main\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("TARGET"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(":main.o\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CC"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("CFLAGS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" -o "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("TARGET"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("LIBS"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n.PHONY:clean\nclean:\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("OBJ"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("TARGET"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br")])]),t("p",[a._v("可以看到，makefile文件中有三个目标，分别是main.o，main和clean，其中clean是一个伪目标。")]),a._v(" "),t("p",[a._v("注意，由于第一个目标是main.o，因此你单单执行make的时候，它只是会生成main.o而已，如果你再执行一次会发现它提示你说main.o已经是最新的了：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\ngcc -g -Wall -c main.c -o main.o\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\nmake: `main.o' is up to date.\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("为了得到main，我们执行：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" main\ngcc -g -Wall -c main.c -o main.o\ngcc -g -Wall -o main main.o -lm\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" \nmain  main.c  main.o  makefile\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("当然你也可以调整目标顺序。这里的目标文件main依赖的是main.o，它开始会去找main.o，发现这个文件也没有，就会看是不是有规则会生成main.o，欸，你还别说，真有。main.o又依赖main.c，也有，最终按照规则就会先生成main.o，然后生成mian。")]),a._v(" "),t("p",[a._v("如果要清除这些目标文件，那么可以执行make clean：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" clean\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" main.o main\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" \nmain.c  makefile\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("本文主要介绍了两部分内容。")]),a._v(" "),t("h3",{attrs:{id:"makefile是什么东西"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#makefile是什么东西"}},[a._v("#")]),a._v(" makefile是什么东西")]),a._v(" "),t("p",[a._v("它是一个规则文件，里面按照某种语法写好了，然后使用make来解释执行，就像shell脚本要用bash解释运行一样。通常会用makefile来构建C/C++项目。")]),a._v(" "),t("h3",{attrs:{id:"构建c-c-项目的makefile做了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建c-c-项目的makefile做了什么"}},[a._v("#")]),a._v(" 构建C/C++项目的makefile做了什么")]),a._v(" "),t("p",[a._v("makefile主要做下面的事情（以C程序为例）")]),a._v(" "),t("ul",[t("li",[a._v("用变量保存各种设置项，例如编译选项，编译器，宏，包含的头文件等")]),a._v(" "),t("li",[a._v("把.c编译成.o")]),a._v(" "),t("li",[a._v("把.o与库进行链接")]),a._v(" "),t("li",[a._v("清除生成的文件")]),a._v(" "),t("li",[a._v("安装程序")]),a._v(" "),t("li")]),a._v(" "),t("p",[a._v("其中最关键的事情就是编译链接，即想办法把.c变成.o（可重定位目标文件）;.o+.so（动态库）+.a（静态库）变成可执行文件。")]),a._v(" "),t("p",[a._v("对于文本提到的例子，看起来实在有些笨拙，一条指令搞定，却要写这么多行的makefile，但是它却指出了通常编写makefile的基本思路。")]),a._v(" "),t("p",[a._v("对于一个复杂的项目而言，makefile还有很多东西可介绍，例如如何设置变量，如何交叉编译，如何多个目录编译，如何自动推导，如何分支选择等等。这些都是后话了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);