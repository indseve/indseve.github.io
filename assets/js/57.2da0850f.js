(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{685:function(t,s,e){"use strict";e.r(s);var a=e(7),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("RouterLink",{attrs:{to:"/interview/"}},[t._v("返回主页")])],1),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("1.为什么用 Nodejs,它有哪些缺点？")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("ul",[e("li",[t._v("事件驱动，通过闭包很容易实现客户端的生命活期。")]),t._v(" "),e("li",[t._v("不用担心多线程，锁，并行计算的问题")]),t._v(" "),e("li",[t._v("V8 引擎速度非常快")]),t._v(" "),e("li",[t._v("对于游戏来说，写一遍游戏逻辑代码，前端后端通用")])]),t._v(" "),e("p",[t._v("当然 Nodejs 也有一些缺点：")]),t._v(" "),e("ul",[e("li",[t._v("nodejs 更新很快，可能会出现版本兼容")]),t._v(" "),e("li",[t._v("nodejs 还不算成熟，还没有大制作")]),t._v(" "),e("li",[t._v("nodejs 不像其他的服务器，对于不同的链接，不支持进程和线程操作")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/371",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("2.NodeJS 的工作原理")])]),t._v(" "),e("p",[t._v("答案：事件循环")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/372",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("3.Node 的应用场景")])]),t._v(" "),e("p",[t._v("答案：比如：RESTFUL API、实时聊天、客户端逻辑强大的单页 APP，具体的例子比如说：本地化的在线音乐应用，本地化的在线搜索应用，本地化的在线 APP 等。")]),t._v(" "),e("ul",[e("li",[t._v("实时应用：如在线聊天，实时通知推送等等（如 socket.io）")]),t._v(" "),e("li",[t._v("分布式应用：通过高效的并行 I/O 使用已有的数据")]),t._v(" "),e("li",[t._v("工具类应用：海量的工具，小到前端压缩部署（如 grunt），大到桌面图形界面应用程序")]),t._v(" "),e("li",[t._v("游戏类应用：游戏领域对实时和并发有很高的要求（如网易的 pomelo 框架）")]),t._v(" "),e("li",[t._v("利用稳定接口提升 Web 渲染能力")]),t._v(" "),e("li",[t._v("前后端编程语言环境统一：前端开发人员可以非常快速地切入到服务器端的开发（如著名的纯 Javascript 全栈式 MEAN 架构）")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/373",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("4.如何用 NodeJS 搭建中间层？")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/374",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("5.什么是 error-first callback ？")])]),t._v(" "),e("p",[t._v("答案：error-first callback 用来传递错误和数据。第一个参数永远是一个错误对象（error-object），回调函数必须检查它。余下的参数用不过来传递数据。")]),t._v(" "),e("p",[t._v("解析：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理出现错误的情况")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理数据")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("考察面试者对于 Node 异步操作基本知识的见解")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/375",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("6.如何避免回调函数嵌套？")])]),t._v(" "),e("p",[t._v("答案：使用 Promises 将回调写成单独的函数")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/376",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("7.Node 程序如何监听 80 端口？")])]),t._v(" "),e("p",[t._v("答案：脑筋急转弯！你不应该直接使用 Node 监听 80 端口（在*nix 系统中），这样做需要 root 权限，对于运行程序来说这不是一个好主意。")]),t._v(" "),e("p",[t._v("不过，你可以使 Node 监听 1024 以上的端口，然后在 Node 前面部署 nginx 反向代理。")]),t._v(" "),e("p",[t._v("解析："),e("a",{attrs:{href:"https://blog.csdn.net/newborn2012/article/details/23860687",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/377",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("8.什么是事件循环（event loop）？")])]),t._v(" "),e("p",[t._v("答案：至少从开发者的角度来看，Node.js 是单线程运行的。底层使用 libuv 使用多线程。\n每一个 I/O 操作都需要一个回调，一旦操作完成会被事件循环执行")]),t._v(" "),e("p",[t._v("解析："),e("a",{attrs:{href:"http://blog.csdn.net/yanghua_kobe/article/details/12145537",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/378",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("9.使用什么工具检查代码风格？")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("ul",[e("li",[t._v("JSLint by Douglas Crockford")]),t._v(" "),e("li",[t._v("JSHint")]),t._v(" "),e("li",[t._v("ESLint")]),t._v(" "),e("li",[t._v("JSCS\n开发团队项目时，强制指定代码风格和使用静态分析，捕捉常见的错误，这些工具都非常有用。")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/379",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("10.操作错误和程序错误的区别是什么？")])]),t._v(" "),e("p",[t._v("答案：操作错误不是 bug，是系统的问题，例如超时或者硬件故障。\n另一方面，程序错误（programmer errors）是实际的错误。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/380",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("11.为什么 npmshrinkwarp 非常有用？")])]),t._v(" "),e("p",[t._v("答案：这个命令在部署 Node.js 应用时是非常有用的——它可以保证所部属的版本就是依赖的版本。")]),t._v(" "),e("p",[t._v("解析："),e("a",{attrs:{href:"http://www.tuicool.com/articles/EBVNV37",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/381",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("12.什么是 stub？说出他的用途？举个使用场景？")])]),t._v(" "),e("p",[t._v("答案：Stubs 是模拟模块或组件行为的程序。\nStubs 提供已知的答案来调用函数，另外你还可以断言哪个 stubs 被调用")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/382",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("13.什么是测试金字塔？在做 HTTP API 的时候要怎么实现？")])]),t._v(" "),e("p",[t._v("答案：测试金字塔意思是在写测试时应该编写的底层但愿测试要多于高级的端到端测试。\n对于 HTTP APIs，应该归结为：")]),t._v(" "),e("ul",[e("li",[t._v("对你的模型多很多单元测试")]),t._v(" "),e("li",[t._v("在你的模型与其他交互时更少的集成测试")]),t._v(" "),e("li",[t._v("更少的验收测试，在 HTTP 端")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/383",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("14.你最熟悉的 Node 框架是什么？为什么？")])]),t._v(" "),e("p",[t._v("答案："),e("a",{attrs:{href:"http://ourjs.com/detail/15%E4%B8%AA%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84node-js%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/384",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("15.你最喜欢的 HTTP 框架，并说明原因？")])]),t._v(" "),e("p",[t._v("答案：LiteHttp 好多的优点\n单线程 灵活的架构 轻量级 多文件上传 自动重定向 禁用一种或多种网络")]),t._v(" "),e("p",[t._v("解析："),e("a",{attrs:{href:"http://blog.csdn.net/kymjs/article/details/45716797",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/385",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("16. 对 Node 的优点和缺点提出了自己的看法")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("（优点）因为 Node 是基于事件驱动和无阻塞的，所以非常适合处理并发请求，\n因此构建在 Node 上的代理服务器相比其他技术实现（如 Ruby）的服务器表现要好得多。\n此外，与 Node 代理服务器交互的客户端代码是由 javascript 语言编写的，\n因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。")])]),t._v(" "),e("li",[e("p",[t._v("（缺点）Node 是一个相对新的开源项目，所以不太稳定，它总是一直在变，\n而且缺少足够多的第三方库支持。看起来，就像是 Ruby/Rails 当年的样子。")])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/386",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("17.需求：实现一个页面操作不会整页刷新的网站，并且能在浏览器前进、后退时正确响应。给出你的技术实现方案？")])]),t._v(" "),e("p",[t._v("答案：至少给出自己的思路（url-hash,可以使用已有的一些框架 history.js 等）")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/387",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("18.(如果会用 node)知道 route, middleware, cluster, nodemon, pm2, server-side rendering 么?")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/388",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("19.解释一下 Backbone 的 MVC 实现方式？")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/389",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("20.什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/390",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("21.对 Node 的优点和缺点提出了自己的看法？")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("p",[t._v("优点：")]),t._v(" "),e("ol",[e("li",[t._v("因为 Node 是基于事件驱动和无阻塞的，所以非常适合处理并发请求，因此构建在 Node 上的代理服务器相比其他技术实现（如 Ruby）的服务器表现要好得多。")]),t._v(" "),e("li",[t._v("与 Node 代理服务器交互的客户端代码是由 javascript 语言编写的，因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。")])]),t._v(" "),e("p",[t._v("缺点：")]),t._v(" "),e("ol",[e("li",[t._v("Node 是一个相对新的开源项目，所以不太稳定，它总是一直在变。")]),t._v(" "),e("li",[t._v("缺少足够多的第三方库支持。看起来，就像是 Ruby/Rails 当年的样子（第三方库现在已经很丰富了，所以这个缺点可以说不存在了）。")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yisainan/web-interview/issues/391",target:"_blank",rel:"noopener noreferrer"}},[t._v("参与互动"),e("OutboundLink")],1)])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("22.使用过的koa2中间件（阿里）")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("koa-router\nkoa-bodyparser\nkoa-views\nkoa-static\nkoa-jwt\nkoa-helmet\nkoa-convert\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("23.master挂了的话pm2怎么处理（阿里）")])]),t._v(" "),e("p",[t._v("答案：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("koa-router\nkoa-bodyparser\nkoa-views\nkoa-static\nkoa-jwt\nkoa-helmet\nkoa-convert\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b",[t._v("24.node文件查找优先级（宝宝树）")])]),t._v(" "),e("p",[t._v("答案：")])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b")]),t._v(" "),e("p",[t._v("答案：")])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b")]),t._v(" "),e("p",[t._v("答案：")])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b")]),t._v(" "),e("p",[t._v("答案：")])]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[e("b")]),t._v(" "),e("p",[t._v("答案：")])])])}),[],!1,null,null,null);s.default=r.exports}}]);