(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{675:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"aria2配置文件参数翻译详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aria2配置文件参数翻译详解"}},[s._v("#")]),s._v(" Aria2配置文件参数翻译详解")]),s._v(" "),a("h2",{attrs:{id:"一-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-介绍"}},[s._v("#")]),s._v(" 一.介绍")]),s._v(" "),a("p",[s._v("Aria2是啥就不用我介绍了，目前最新版本已经到了1.33，配置参数那是相当滴多，偶然发现AriaNG的语言文件里有绝大部分参数的中文解释，所以拿出来重新排版下方便查看。")]),s._v(" "),a("h2",{attrs:{id:"二-配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-配置文件"}},[s._v("#")]),s._v(" 二.配置文件")]),s._v(" "),a("p",[s._v("请注意，原翻译来自AriaNG语言文件——>"),a("a",{attrs:{href:"https://github.com/mayswind/AriaNg/blob/master/src/langs/zh_Hans.txt",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("默认配置内容来自Aria2 1.33.0文档——>"),a("a",{attrs:{href:"https://aria2.github.io/manual/en/html/aria2c.html#aria2-conf",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("请配合官方文档食用，文档中还含有部分仅可用于命令行参数的内容，本配置文件中未包含该部分")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#等号后面内容为默认设置，如为空则无默认设置，请自行选取需要更改的添加到你的配置文件中")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#日志文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#日志文件的路径. 如果设置为 "-", 日志则写入到 stdout. 如果设置为空字符串(""), 日志将不会记录到磁盘上.')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大同时下载数")]),s._v("\nmax-concurrent-downloads"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#检查完整性")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#通过对文件的每个分块或整个文件进行哈希验证来检查文件的完整性. 此选项仅对BT、Metalink及设置了 --checksum 选项的 HTTP(S)/FTP 链接生效.")]),s._v("\ncheck-integrity"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#断点续传")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#继续下载部分完成的文件. 启用此选项可以继续下载从浏览器或其他程序按顺序下载的文件. 此选项目前只支持 HTTP(S)/FTP 下载的文件.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("continue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代理服务器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#设置所有协议的代理服务器地址. 如果覆盖之前设置的代理服务器, 使用 "" 即可. 您还可以针对特定的协议覆盖此选项, 即使用 --http-proxy, --https-proxy 和 --ftp-proxy 选项. 此设置将会影响所有下载. 代理服务器地址的格式为 [http://][USER:PASSWORD@]HOST[:PORT].')]),s._v("\nall-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代理服务器用户名")]),s._v("\nall-proxy-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代理服务器密码")]),s._v("\nall-proxy-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#连接超时时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置建立 HTTP/FTP/代理服务器 连接的超时时间(秒). 当连接建立后, 此选项不再生效, 请使用 --timeout 选项.")]),s._v("\nconnect-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#模拟运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是", aria2 将仅检查远程文件是否存在而不会下载文件内容. 此选项仅对 HTTP/FTP 下载生效. 如果设置为 true, BT 下载将会直接取消.')]),s._v("\ndry-run"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最小速度限制")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当下载速度低于此选项设置的值(B/s) 时将会关闭连接. 0 表示不设置最小速度限制. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K). 此选项不会影响 BT 下载.")]),s._v("\nlowest-speed-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#单服务器最大连接数")]),s._v("\nmax-connection-per-server"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件未找到重试次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果 aria2 从远程 HTTP/FTP 服务器收到 "文件未找到" 的状态超过此选项设置的次数后下载将会失败. 设置为 0 将会禁用此选项. 此选项仅影响 HTTP/FTP 服务器. 重试时同时会记录重试次数, 所以也需要设置 --max-tries 这个选项.')]),s._v("\nmax-file-not-found"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大尝试次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置最大尝试次数. 0 表示不限制.")]),s._v("\nmax-tries"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最小文件分片大小")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#aria2 不会分割小于 2*SIZE 字节的文件. 例如, 文件大小为 20MB, 如果 SIZE 为 10M, aria2 会把文件分成 2 段 [0-10MB) 和 [10MB-20MB), 并且使用 2 个源进行下载 (如果 --split >= 2). 如果 SIZE 为 15M, 由于 2*15M > 20MB, 因此 aria2 不会分割文件并使用 1 个源进行下载. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K). 可以设置的值为: 1M-1024M.")]),s._v("\nmin-split-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("20M\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#.netrc 文件路径")]),s._v("\nnetrc-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/.netrc\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#禁用 netrc")]),s._v("\nno-netrc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不使用代理服务器列表")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置不使用代理服务器的主机名, 域名, 包含或不包含子网掩码的网络地址, 多个使用逗号分隔.")]),s._v("\nno-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载文件的文件名. 其总是相对于 --dir 选项中设置的路径. 当使用 --force-sequential 参数时此选项无效.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("out")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#代理服务器请求方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置用来请求代理服务器的方法. 方法可设置为 GET 或 TUNNEL. HTTPS 下载将忽略此选项并总是使用 TUNNEL.")]),s._v("\nproxy-method"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("get\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取服务器文件时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#从 HTTP/FTP 服务获取远程文件的时间戳, 如果可用将设置到本地文件")]),s._v("\nremote-time"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#URI 复用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当所有给定的 URI 地址都已使用, 继续使用已经使用过的 URI 地址.")]),s._v("\nreuse-uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重试等待时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置重试间隔时间(秒). 当此选项的值大于 0 时, aria2 在 HTTP 服务器返回 503 响应时将会重试.")]),s._v("\nretry-wait"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#服务器状态保存文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定用来保存服务器状态的文件名. 您可以使用 --server-stat-if 参数读取保存的数据.")]),s._v("\nserver-stat-of"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#服务器状态超时")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定服务器状态的过期时间 (单位为秒).")]),s._v("\nserver-stat-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("86400")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#单任务连接数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载时使用 N 个连接. 如果提供超过 N 个 URI 地址, 则使用前 N 个地址, 剩余的地址将作为备用. 如果提供的 URI 地址不足 N 个, 这些地址多次使用以保证同时建立 N 个连接. 同一服务器的连接数会被 --max-connection-per-server 选项限制.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("split")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#分片选择算法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#指定 HTTP/FTP 下载使用的分片选择算法. 分片表示的是并行下载时固定长度的分隔段. 如果设置为"默认", aria2 将会按减少建立连接数选择分片. 由于建立连接操作的成本较高, 因此这是合理的默认行为. 如果设置为"顺序", aria2 将选择索引最小的分片. 索引为 0 时表示为文件的第一个分片. 这将有助于视频的边下边播. --enable-http-pipelining 选项有助于减少重连接的开销. 请注意, aria2 依赖于 --min-split-size 选项, 所以有必要对 --min-split-size 选项设置一个合理的值. 如果设置为"随机", aria2 将随机选择一个分片. 就像"顺序"一样, 依赖于 --min-split-size 选项. 如果设置为"几何", aria2 会先选择索引最小的分片, 然后会为之前选择的分片保留指数增长的空间. 这将减少建立连接的次数, 同时文件开始部分将会先行下载. 这也有助于视频的边下边播.')]),s._v("\nstream-piece-selector"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#超时时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("timeout")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#URI 选择算法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#指定 URI 选择的算法. 可选的值包括 "按顺序", "反馈" 和 "自适应". 如果设置为"按顺序", URI 将按列表中出现的顺序使用. 如果设置为"反馈", aria2 将根据之前的下载速度选择 URI 列表中下载速度最快的服务器. 同时也将有效跳过无效镜像. 之前统计的下载速度将作为服务器状态文件的一部分, 参见 --server-stat-of 和 --server-stat-if 选项. 如果设置为"自适应", 将从最好的镜像和保留的连接里选择一项. 补充说明, 其返回的镜像没有被测试过, 同时如果每个镜像都已经被测试过时, 返回的镜像还会被重新测试. 否则, 其将不会选择其他镜像. 例如"反馈", 其使用服务器状态文件.')]),s._v("\nuri-selector"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("feedback\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#检查证书")]),s._v("\ncheck-certificate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#支持 GZip")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果远程服务器的响应头中包含 Content-Encoding: gzip 或 Content-Encoding: deflate , 将发送包含 Accept: deflate, gzip 的请求头并解压缩响应.")]),s._v("\nhttp-accept-gzip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#认证质询")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#仅当服务器需要时才发送 HTTP 认证请求头. 如果设置为"否", 每次都会发送认证请求头. 例外: 如果用户名和密码包含在 URI 中, 将忽略此选项并且每次都会发送认证请求头.')]),s._v("\nhttp-auth-challenge"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#禁用缓存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#发送的请求头中将包含 Cache-Control: no-cache 和 Pragma: no-cache header 以避免内容被缓存. 如果设置为"否", 上述请求头将不会发送, 同时您也可以使用 --header 选项将 Cache-Control 请求头添加进去.')]),s._v("\nhttp-no-cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTP 默认用户名")]),s._v("\nhttp-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTP 默认密码")]),s._v("\nhttp-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTP 代理服务器")]),s._v("\nhttp-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTP 代理服务器用户名")]),s._v("\nhttp-proxy-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTP 代理服务器密码")]),s._v("\nhttp-proxy-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTPS 代理服务器")]),s._v("\nhttps-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTPS 代理服务器用户名")]),s._v("\nhttps-proxy-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#HTTPS 代理服务器密码")]),s._v("\nhttps-proxy-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#请求来源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 HTTP 请求来源 (Referer). 此选项将影响所有 HTTP/HTTPS 下载. 如果设置为 *, 请求来源将设置为下载链接. 此选项可以配合 --parameterized-uri 选项使用.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("referer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用持久连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 HTTP/1.1 持久连接.")]),s._v("\nenable-http-keep-alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 HTTP 管线化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 HTTP/1.1 管线化.")]),s._v("\nenable-http-pipelining"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#自定义请求头")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#增加 HTTP 请求头内容.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("header")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Cookies 保存路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#以 Mozilla/Firefox(1.x/2.x)/Netscape 格式将 Cookies 保存到文件中. 如果文件已经存在, 将被覆盖. 会话过期的 Cookies 也将会保存, 其过期时间将会设置为 0.")]),s._v("\nsave-cookies"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 HEAD 方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#第一次请求 HTTP 服务器时使用 HEAD 方法.")]),s._v("\nuse-head"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#自定义 User Agent")]),s._v("\nuser-agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("aria2/"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#FTP 默认用户名")]),s._v("\nftp-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("anonymous\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#FTP 默认密码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果 URI 中包含用户名单不包含密码, aria2 首先会从 .netrc 文件中获取密码. 如果在 .netrc 文件中找到密码, 则使用该密码. 否则, 使用此选项设置的密码.")]),s._v("\nftp-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ARIA2USER@\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#被动模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#在 FTP 中使用被动模式. 如果设置为"否", 则使用主动模式. 此选项不适用于 SFTP 传输.')]),s._v("\nftp-pasv"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#FTP 代理服务器")]),s._v("\nftp-proxy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#FTP 代理服务器用户名")]),s._v("\nftp-proxy-user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#FTP 代理服务器密码")]),s._v("\nftp-proxy-passwd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#传输类型")]),s._v("\nftp-type"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("binary\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#连接复用")]),s._v("\nftp-reuse-connection"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#SSH 公钥校验和")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 SSH 主机公钥的校验和. TYPE 为哈希类型. 支持的哈希类型为 sha-1 和 md5. DIGEST 是十六进制摘要. 例如: sha-1=b030503d4de4539dc7885e6f0f5e256704edf4c3. 此选项可以在使用 SFTP 时用来验证服务器的公钥. 如果此选项不设置, 即保留默认, 不会进行任何验证。")]),s._v("\nssh-host-key-md"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#分离仅做种任务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#统计当前活动下载任务(参见 -j 选项) 时排除仅做种的任务. 这意味着, 如果参数设置为 -j3, 此选项打开并且当前有 3 个正在活动的任务, 并且其中有 1 个进入做种模式, 那么其会从正在下载的数量中排除(即数量会变为 2), 在队列中等待的下一个任务将会开始执行. 但要知道, 在 RPC 方法中, 做种的任务仍然被认为是活动的下载任务.")]),s._v("\nbt-detach-seed-only"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用哈希检查完成事件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#允许 BT 下载哈希检查(参见 -V 选项) 完成后调用命令. 默认情况下, 当哈希检查成功后, 通过 --on-bt-download-complete 设置的命令将会被执行. 如果要禁用此行为, 请设置为"否".')]),s._v("\nbt-enable-hook-after-hash-check"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用本地节点发现  (LPD)")]),s._v("\nbt-enable-lpd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT 排除服务器地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#逗号分隔的 BT 排除服务器地址. 您可以使用 * 匹配所有地址, 因此将排除所有服务器地址. 当在 shell 命令行使用 * 时, 需要使用转义符或引号.")]),s._v("\nbt-exclude-tracker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#外部 IP 地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定用在 BitTorrent 下载和 DHT 中的外部 IP 地址. 它可能被发送到 BitTorrent 服务器. 对于 DHT, 此选项将会报告本地节点正在下载特定的种子. 这对于在私有网络中使用 DHT 非常关键. 虽然这个方法叫外部, 但其可以接受各种类型的 IP 地址.")]),s._v("\nbt-external-ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#强制加密")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#BT 消息中的内容需要使用 arc4 加密. 此选项是设置 --bt-require-crypto --bt-min-crypto-level=arc4 这两个选项的快捷方式. 此选项不会修改上述两个选项的内容. 如果设置为"是", 将拒绝以前的 BT 握手, 并仅使用模糊握手及加密消息.')]),s._v("\nbt-force-encryption"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#做种前检查文件哈希")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是", 当使用 --check-integrity 选项完成哈希检查及文件完成后才继续做种. 如果您希望仅当文件损坏或未完成时检查文件, 请设置为"否". 此选项仅对 BT 下载有效')]),s._v("\nbt-hash-check-seed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#加载已保存的元数据文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当使用磁链下载时, 在从 DHT 获取种子元数据之前, 首先尝试加载使用 --bt-save-metadata 选项保存的文件. 如果文件加载成功, 则不会从 DHT 下载元数据.")]),s._v("\nbt-load-saved-metadata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最多打开文件数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 BT/Metalink 下载全局打开的最大文件数.")]),s._v("\nbt-max-open-files"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大连接节点数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置每个 BT 下载的最大连接节点数. 0 表示不限制.")]),s._v("\nbt-max-peers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅下载种子文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅下载种子文件. 种子文件中描述的文件将不会下载. 此选项仅对磁链生效.")]),s._v("\nbt-metadata-only"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最低加密级别")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置加密方法的最小级别. 如果节点提供多种加密方法, aria2 将选择满足给定级别的最低级别.")]),s._v("\nbt-min-crypto-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("plain\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#优先下载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#尝试先下载每个文件开头或结尾的分片. 此选项有助于预览文件. 参数可以包括两个关键词: head 和 tail. 如果包含两个关键词, 需要使用逗号分隔. 每个关键词可以包含一个参数, SIZE. 例如, 如果指定 head=SIZE, 每个文件的最前 SIZE 数据将会获得更高的优先级. tail=SIZE 表示每个文件的最后 SIZE 数据. SIZE 可以包含 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nbt-prioritize-piece"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除未选择的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当 BT 任务完成后删除未选择的文件. 要选择需要下载的文件, 请使用 --select-file 选项. 如果没有选择, 则所有文件都默认为需要下载. 此选项会从磁盘上直接删除文件, 请谨慎使用此选项.")]),s._v("\nbt-remove-unselected-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#需要加密")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是", aria 将不会接受以前的 BitTorrent 握手协议(\\\\19BitTorrent 协议)并建立连接. 因此 aria2 总是模糊握手.')]),s._v("\nbt-require-crypto"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#期望下载速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果一个 BT 下载的整体下载速度低于此选项设置的值, aria2 会临时提高连接数以提高下载速度. 在某些情况下, 设置期望下载速度可以提高您的下载速度. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nbt-request-peer-speed-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("50K\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存种子文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#保存种子文件为 ".torrent" 文件. 此选项仅对磁链生效. 文件名为十六进制编码后的哈希值及 ".torrent"后缀. 保存的目录与下载文件的目录相同. 如果相同的文件已存在, 种子文件将不会保存.')]),s._v("\nbt-save-metadata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不检查已经下载的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不检查之前下载文件中每个分片的哈希值.")]),s._v("\nbt-seed-unverified"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#无速度时自动停止时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当 BT 任务F下载速度持续为 0, 达到此选项设置的时间后停止下载. 如果设置为 0, 此功能将禁用.")]),s._v("\nbt-stop-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT 服务器地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#逗号分隔的 BT 服务器地址. 如果服务器地址在 --bt-exclude-tracker 选项中, 其将不会生效.")]),s._v("\nbt-tracker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT 服务器连接超时时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 BT 服务器的连接超时时间 (秒). 当连接建立后, 此选项不再生效, 请使用 --bt-tracker-timeout 选项.")]),s._v("\nbt-tracker-connect-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT 服务器连接间隔时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置请求 BT 服务器的间隔时间 (秒). 此选项将完全覆盖服务器返回的最小间隔时间和间隔时间, aria2 仅使用此选项的值.如果设置为 0, aria2 将根据服务器的响应情况和下载进程决定时间间隔.")]),s._v("\nbt-tracker-interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT 服务器超时时间")]),s._v("\nbt-tracker-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DHT (IPv4) 文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改 IPv4 DHT 路由表文件路径.")]),s._v("\ndht-file-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.aria2/dht.dat\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DHT (IPv6) 文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改 IPv6 DHT 路由表文件路径.")]),s._v("\ndht-file-path6"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.aria2/dht6.dat\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DHT 监听端口")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#设置 DHT (IPv4, IPv6) 和 UDP 服务器使用的 UCP 端口. 多个端口可以使用逗号 "," 分隔, 例如: 6881,6885. 您还可以使用短横线 "-" 表示范围: 6881-6999, 或可以一起使用: 6881-6889, 6999.')]),s._v("\ndht-listen-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6881")]),s._v("-6999\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DHT 消息超时时间")]),s._v("\ndht-message-timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 DHT (IPv4)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#启用 IPv4 DHT 功能. 此选项同时会启用 UDP 服务器支持. 如果种子设置为私有, 即使此选项设置为"是", aria2 也不会启用 DHT.')]),s._v("\nenable-dht"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 DHT (IPv6)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#启用 IPv6 DHT 功能. 如果种子设置为私有, 即使此选项设置为"是", aria2 也不会启用 DHT. 使用 --dht-listen-port 选项设置监听的端口.')]),s._v("\nenable-dht6"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用节点交换")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#启用节点交换扩展. 如果种子设置为私有, 即使此选项设置为"是", aria2 也不会启用此功能.')]),s._v("\nenable-peer-exchange"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载种子中的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是"或"仅内存", 当后缀为 .torrent 或内容类型为 application/x-bittorrent 的文件下载完成时, aria2 将按种子文件读取并下载该文件中提到的文件. 如果设置为"仅内存", 该种子文件将不会写入到磁盘中, 而仅会存储在内存中. 如果设置为"否", 则 .torrent 文件会下载到磁盘中, 但不会按种子文件读取并且其中的文件不会进行下载.')]),s._v("\nfollow-torrent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#监听端口")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#设置 BT 下载的 TCP 端口. 多个端口可以使用逗号 "," 分隔, 例如: 6881,6885. 您还可以使用短横线 "-" 表示范围: 6881-6999, 或可以一起使用: 6881-6889, 6999.')]),s._v("\nlisten-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6881")]),s._v("-6999\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#全局最大上传速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置全局最大上传速度 (字节/秒). 0 表示不限制. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nmax-overall-upload-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大上传速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置每个任务的最大上传速度 (字节/秒). 0 表示不限制. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nmax-upload-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#节点 ID 前缀")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定节点 ID 的前缀. BT 中节点 ID 长度为 20 字节. 如果超过 20 字节, 将仅使用前 20 字节. 如果少于 20 字节, 将在其后不足随机的数据保证为 20 字节.")]),s._v("\npeer-id-prefix"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("A2-1-33-0-\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Peer Agent")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定 BT 扩展握手期间用于节点客户端版本的字符串.")]),s._v("\npeer-agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("aria2/1.33.0\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最小分享率")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定分享率. 当分享率达到此选项设置的值时会完成做种. 强烈建议您将此选项设置为大于等于 1.0. 如果您想不限制分享比率, 可以设置为 0.0. 如果同时设置了 --seed-time 选项, 当任意一个条件满足时将停止做种.")]),s._v("\nseed-ratio"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最小做种时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#此选项设置为 0 时, 将在 BT 任务下载完成后不进行做种.")]),s._v("\nseed-time"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载 Metalink 中的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是"或"仅内存", 当后缀为 .meta4 或 .metalink 或内容类型为 application/metalink4+xml 或 application/metalink+xml 的文件下载完成时, aria2 将按 Metalink 文件读取并下载该文件中提到的文件. 如果设置为"仅内存", 该 Metalink 文件将不会写入到磁盘中, 而仅会存储在内存中. 如果设置为"否", 则 .metalink 文件会下载到磁盘中, 但不会按 Metalink 文件读取并且其中的文件不会进行下载.')]),s._v("\nfollow-metalink"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#基础 URI")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定基础 URI 以便解析本地磁盘中存储的 Metalink 文件里 metalink:url 和 metalink:metaurl 中的相对 URI 地址. 如果 URI 表示的为目录, 最后需要以 / 结尾.")]),s._v("\nmetalink-base-uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#语言")]),s._v("\nmetalink-language"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#首选服务器位置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#首选服务器所在的位置. 可以使用逗号分隔的列表, 例如: jp,us.")]),s._v("\nmetalink-location"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#操作系统")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载文件的操作系统.")]),s._v("\nmetalink-os"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#版本号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载文件的版本号.")]),s._v("\nmetalink-version"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#首选使用协议")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#指定首选使用的协议. 可以设置为 http, https, ftp 或"无". 设置为"无"时禁用此选项.')]),s._v("\nmetalink-preferred-protocol"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("none\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅使用唯一协议")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果一个 Metalink 文件可用多种协议, 并且此选项设置为"是", aria2 将只会使用其中一种. 使用 --metalink-preferred-protocol 参数指定首选的协议.')]),s._v("\nmetalink-enable-unique-protocol"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 JSON-RPC/XML-RPC 服务器")]),s._v("\nenable-rpc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#种子文件下载完后暂停")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当种子文件下载完成后暂停后续的下载. 在 aria2 中有 3 种种子文件的下载类型: (1) 下载 .torrent 文件. (2) 通过磁链下载的种子文件. (3) 下载 Metalink 文件. 这些种子文件下载完后会根据文件内容继续进行下载. 此选项会暂停这些后续的下载. 此选项仅当 --enable-rpc 选项启用时生效.")]),s._v("\npause-metadata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#接受所有远程请求")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在 RPC 响应头增加 Access-Control-Allow-Origin 字段, 值为 * .")]),s._v("\nrpc-allow-origin-all"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在所有网卡上监听")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#在所有网络适配器上监听 JSON-RPC/XML-RPC 的请求, 如果设置为"否", 仅监听本地网络的请求.')]),s._v("\nrpc-listen-all"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#监听端口")]),s._v("\nrpc-listen-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6800")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大请求大小")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 JSON-RPC/XML-RPC 最大的请求大小. 如果 aria2 检测到请求超过设定的字节数, 会直接取消连接.")]),s._v("\nrpc-max-request-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("2M\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存上传的种子文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在 dir 选项设置的目录中保存上传的种子文件或 Metalink 文件. 文件名包括 SHA-1 哈希后的元数据和扩展名两部分. 对于种子文件, 扩展名为 '.torrent'. 对于 Metalink 为 '.meta4'. 如果此选项设置为\"否\", 通过 aria2.addTorrent() 或 aria2.addMetalink() 方法添加的下载将无法通过 --save-session 选项保存.")]),s._v("\nrpc-save-upload-metadata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 SSL/TLS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#RPC 将通过 SSL/TLS 加密传输. RPC 客户端需要使用 https 协议连接服务器. 对于 WebSocket 客户端, 使用 wss 协议. 使用 --rpc-certificate 和 --rpc-private-key 选项设置服务器的证书和私钥.")]),s._v("\nrpc-secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#允许覆盖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果相应的控制文件不存在时从头重新下载文件. 参见 --auto-file-renaming 选项.")]),s._v("\nallow-overwrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#允许分片大小变化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"否", 当分片长度与控制文件中的不同时, aria2 将会中止下载. 如果设置为"是", 您可以继续, 但部分下载进度将会丢失.')]),s._v("\nallow-piece-length-change"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#始终断点续传")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#始终断点续传. 如果设置为"是", aria2 始终尝试断点续传, 如果无法恢复, 则中止下载. 如果设置为"否", 对于不支持断点续传的 URI 或 aria2 遇到 N 个不支持断点续传的 URI (N 为 --max-resume-failure-tries 选项设置的值), aria2 会从头下载文件. 参见 --max-resume-failure-tries 参数.')]),s._v("\nalways-resume"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#异步 DNS")]),s._v("\nasync-dns"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件自动重命名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重新命名已经存在的文件. 此选项仅对 HTTP(S)/FTP 下载有效. 新的文件名后会在文件名后、扩展名 (如果有) 前追加句点和数字(1..9999).")]),s._v("\nauto-file-renaming"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#自动保存间隔")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每隔设置的秒数自动保存控制文件(*.aria2). 如果设置为 0, 下载期间控制文件不会自动保存. 不论设置的值为多少, aria2 会在任务结束时保存控制文件. 可以设置的值为 0 到 600.")]),s._v("\nauto-save-interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#条件下载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅当本地文件比远程文件旧时才进行下载. 此功能仅适用于 HTTP(S) 下载. 如果在 Metalink 中文件大小已经被指定则功能无法生效. 同时此功能还将忽略 Content-Disposition 响应头. 如果存在控制文件, 此选项将被忽略. 此功能通过 If-Modified-Since 请求头获取较新的文件. 当获取到本地文件的修改时间时, 此功能将使用用户提供的文件名 (参见 --out 选项), 如果没有指定 --out 选项则使用 URI 中的文件名. 为了覆盖已经存在的文件, 需要使用 --allow-overwrite 参数.")]),s._v("\nconditional-get"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#配置文件路径")]),s._v("\nconf-path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.aria2/aria2.conf\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#控制台日志级别")]),s._v("\nconsole-log-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("notice\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用 UTF-8 处理 Content-Disposition")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#处理 "Content-Disposition" 头中的字符串时使用 UTF-8 字符集来代替 ISO-8859-1, 例如, 文件名参数, 但不是扩展版本的文件名.')]),s._v("\ncontent-disposition-default-utf8"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用后台进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("daemon")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#延迟加载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是", aria2 在启动时不会读取 --input-file 选项设置的文件中的所有 URI 地址, 而是会在之后需要时按需读取. 如果输入文件中包含大量要下载的 URI, 此选项可以减少内存的使用. 如果设置为"否", aria2 会在启动时读取所有的 URI. 当 -save-session 使用时将会禁用 --deferred-input 选项.')]),s._v("\ndeferred-input"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#禁用 IPv6")]),s._v("\ndisable-ipv6"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#磁盘缓存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用磁盘缓存. 如果设置为 0, 将禁用磁盘缓存. 此功能将下载的数据缓存在内存中, 最多占用此选项设置的字节数. 缓存存储由 aria2 实例创建并对所有下载共享. 由于数据以较大的单位写入并按文件的偏移重新排序, 所以磁盘缓存的一个优点是减少磁盘的 I/O. 如果调用哈希检查时并且数据缓存在内存中时, 将不需要从磁盘中读取. 大小可以包含 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\ndisk-cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("16M\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#此选项将修改下载结果的格式. 如果设置为"默认", 将打印 GID, 状态, 平均下载速度和路径/URI. 如果涉及多个文件, 仅打印第一个请求文件的路径/URI, 其余的将被忽略. 如果设置为"完整", 将打印 GID, 状态, 平均下载速度, 下载进度和路径/URI. 其中, 下载进度和路径/URI 将会每个文件打印一行. 如果设置为"隐藏", 下载结果将会隐藏.')]),s._v("\ndownload-result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#DSCP")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为 QoS 设置 BT 上行 IP 包的 DSCP 值. 此参数仅设置 IP 包中 TOS 字段的 DSCP 位, 而不是整个字段. 如果您从 /usr/include/netinet/ip.h 得到的值, 需要除以 4 (否则值将不正确, 例如您的 CS1 类将会转为 CS4). 如果您从 RFC, 网络供应商的文档, 维基百科或其他来源采取常用的值, 可以直接使用.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dscp")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最多打开的文件描述符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置打开的文件描述符的软限制 (soft limit). 此选项仅当满足如下条件时开放: a. 系统支持它 (posix). b. 限制没有超过硬限制 (hard limit). c. 指定的限制比当前的软限制高. 这相当于设置 ulimit, 除了其不能降低限制. 此选项仅当系统支持 rlimit API 时有效.")]),s._v("\nrlimit-nofile"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#终端输出使用颜色")]),s._v("\nenable-color"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用 MMap")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#内存中存放映射文件. 当文件空间没有预先分配至, 此选项无效. 参见 --file-allocation.")]),s._v("\nenable-mmap"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#事件轮询方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置事件轮训的方法. 可选的值包括 epoll, kqueue, port, poll 和 select. 对于 epoll, kqueue, port 和 poll, 只有系统支持时才可用. 最新的 Linux 支持 epoll. 各种 *BSD 系统包括 Mac OS X 支持 kqueue. Open Solaris 支持 port. 默认值根据您使用的操作系统不同而不同.")]),s._v("\nevent-poll"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件分配方法")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#指定文件分配方法. "无" 不会预先分配文件空间. "prealloc"会在下载开始前预先分配空间. 这将会根据文件的大小需要一定的时间. 如果您使用的是较新的文件系统, 例如 ext4 (带扩展支持), btrfs, xfs 或 NTFS (仅 MinGW 构建), "falloc" 是最好的选择. 其几乎可以瞬间分配大(数 GiB)文件. 不要在旧的文件系统, 例如 ext3 和 FAT32 上使用 falloc, 因为与 prealloc 花费的时间相同, 并且其会阻塞 aria2 知道分配完成. 当您的系统不支持 posix_fallocate(3) 函数时, falloc 可能无法使用. "trunc" 使用 ftruncate(2) 系统调用或平台特定的实现将文件截取到特定的长度. 在多文件的 BitTorrent 下载中, 若某文件与其相邻的文件共享相同的分片时, 则相邻的文件也会被分配.')]),s._v("\nfile-allocation"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("prealloc\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#强制保存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#即使任务完成或删除时使用 --save-session 选项时也保存该任务. 此选项在这种情况下还会保存控制文件. 此选项可以保存被认为已经完成但正在做种的 BT 任务.")]),s._v("\nforce-save"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存未找到的文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当使用 --save-session 选项时, 即使当任务中的文件不存在时也保存该下载任务. 此选项同时会将这种情况保存到控制文件中.")]),s._v("\nsave-not-found"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅哈希检查")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#如果设置为"是", 哈希检查完使用 --check-integrity 选项, 根据是否下载完成决定是否终止下载.')]),s._v("\nhash-check-only"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#控制台可读输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在控制台输出可读格式的大小和速度 (例如, 1.2Ki, 3.4Mi).")]),s._v("\nhuman-readable"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保留未完成的任务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保留所有未完成的下载结果, 即使超过了 --max-download-result 选项设置的数量. 这将有助于在会话文件中保存所有的未完成的下载 (参考 --save-session 选项). 需要注意的是, 未完成任务的数量没有上限. 如果不希望这样, 请关闭此选项.")]),s._v("\nkeep-unfinished-download-result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最多下载结果")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置内存中存储最多的下载结果数量. 下载结果包括已完成/错误/已删除的下载. 下载结果存储在一个先进先出的队列中, 因此其可以存储最多指定的下载结果的数量. 当队列已满且有新的下载结果创建时, 最老的下载结果将从队列的最前部移除, 新的将放在最后. 此选项设置较大的值后如果经过几千次的下载将导致较高的内存消耗. 设置为 0 表示不存储下载结果. 注意, 未完成的下载将始终保存在内存中, 不考虑该选项的设置. 参考 --keep-unfinished-download-result 选项.")]),s._v("\nmax-download-result"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#MMap 最大限制")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置启用 MMap (参见 --enable-mmap 选项) 最大的文件大小. 文件大小由一个下载任务中所有文件大小的和决定. 例如, 如果一个下载包含 5 个文件, 那么文件大小就是这些文件的总大小. 如果文件大小超过此选项设置的大小时, MMap 将会禁用.")]),s._v("\nmax-mmap-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9223372036854775807")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大断点续传尝试次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#当 --always-resume 选项设置为"否"时, 如果 aria2 检测到有 N 个 URI 不支持断点续传时, 将从头开始下载文件. 如果 N 设置为 0, 当所有 URI 都不支持断点续传时才会从头下载文件. 参见 --always-resume 选项.')]),s._v("\nmax-resume-failure-tries"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最低 TLS 版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定启用的最低 SSL/TLS 版本.")]),s._v("\nmin-tls-version"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TLSv1\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#日志级别")]),s._v("\nlog-level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("debug\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#优化并发下载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据可用带宽优化并发下载的数量. aria2 使用之前统计的下载速度通过规则 N = A + B Log10 (速度单位为 Mbps) 得到并发下载的数量. 其中系数 A 和 B 可以在参数中以冒号分隔自定义. 默认值 (A=5, B=25) 可以在 1Mbps 网络上使用通常 5 个并发下载, 在 100Mbps 网络上为 50 个. 并发下载的数量保持在 --max-concurrent-downloads 参数定义的最大之下.")]),s._v("\noptimize-concurrent-downloads"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件分片大小")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 HTTP/FTP 下载的分配大小. aria2 根据这个边界分割文件. 所有的分割都是这个长度的倍数. 此选项不适用于 BitTorrent 下载. 如果 Metalink 文件中包含分片哈希的结果此选项也不适用.")]),s._v("\npiece-length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1M\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#显示控制台输出")]),s._v("\nshow-console-readout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载摘要输出间隔")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置下载进度摘要的输出间隔(秒). 设置为 0 禁止输出.")]),s._v("\nsummary-interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#全局最大下载速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置全局最大下载速度 (字节/秒). 0 表示不限制. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nmax-overall-download-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#最大下载速度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置每个任务的最大下载速度 (字节/秒). 0 表示不限制. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nmax-download-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#禁用配置文件")]),s._v("\nno-conf"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#文件分配限制")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不对比此参数设置大小小的分配文件. 您可以增加数值的单位 K 或 M (1K = 1024, 1M = 1024K).")]),s._v("\nno-file-allocation-limit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("5M\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用参数化 URI 支持")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启用参数化 URI 支持. 您可以指定部分的集合: http://{sv1,sv2,sv3}/foo.iso. 同时您也可以使用步进计数器指定数字化的序列: http://host/image[000-100:2].img. 步进计数器可以省略. 如果所有 URI 地址不指向同样的文件, 例如上述第二个示例, 需要使用 -Z 选项.")]),s._v("\nparameterized-uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#禁用控制台输出")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("quiet")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#实时数据块验证")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#如果提供了数据块的校验和, 将在下载过程中通过校验和验证数据块.")]),s._v("\nrealtime-chunk-checksum"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除控制文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在下载前删除控制文件. 使用 --allow-overwrite=true 选项时, 总是从头开始下载文件. 此选项将有助于使用不支持断点续传代理服务器的用户.")]),s._v("\nremove-control-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#状态保存文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当退出时保存错误及未完成的任务到指定的文件中. 您可以在重启 aria2 时使用 --input-file 选项重新加载. 如果您希望输出的内容使用 GZip 压缩, 您可以在文件名后增加 .gz 扩展名. 请注意, 通过 aria2.addTorrent() 和 aria2.addMetalink() RPC 方法添加的下载, 其元数据没有保存到文件的将不会保存. 通过 aria2.remove() 和 aria2.forceRemove() 删除的下载将不会保存.")]),s._v("\nsave-session"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存状态间隔")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每隔此选项设置的时间(秒)后会保存错误或未完成的任务到 --save-session 选项指定的文件中. 如果设置为 0, 仅当 aria2 退出时才会保存.")]),s._v("\nsave-session-interval"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Socket 接收缓冲区大小")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置 Socket 接收缓冲区最大的字节数. 指定为 0 时将禁用此选项. 当使用 SO_RCVBUF 选项调用 setsockopt() 时此选项的值将设置到 Socket 的文件描述符中.")]),s._v("\nsocket-recv-buffer-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#自动关闭时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在此选项设置的时间(秒)后关闭应用. 如果设置为 0, 此功能将禁用.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("stop")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#缩短控制台输出内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#缩短控制台输出的内容在一行中.")]),s._v("\ntruncate-console-readout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#部分事件hook")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#BT下载完成(如有做种将包含做种，如需调用请务必确定设定完成做种条件)")]),s._v("\non-bt-download-complete"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载完成")]),s._v("\non-download-complete"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载错误")]),s._v("\non-download-error"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载暂停")]),s._v("\non-download-pause"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载开始")]),s._v("\non-download-start"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#下载停止")]),s._v("\non-download-stop"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br"),a("span",{staticClass:"line-number"},[s._v("155")]),a("br"),a("span",{staticClass:"line-number"},[s._v("156")]),a("br"),a("span",{staticClass:"line-number"},[s._v("157")]),a("br"),a("span",{staticClass:"line-number"},[s._v("158")]),a("br"),a("span",{staticClass:"line-number"},[s._v("159")]),a("br"),a("span",{staticClass:"line-number"},[s._v("160")]),a("br"),a("span",{staticClass:"line-number"},[s._v("161")]),a("br"),a("span",{staticClass:"line-number"},[s._v("162")]),a("br"),a("span",{staticClass:"line-number"},[s._v("163")]),a("br"),a("span",{staticClass:"line-number"},[s._v("164")]),a("br"),a("span",{staticClass:"line-number"},[s._v("165")]),a("br"),a("span",{staticClass:"line-number"},[s._v("166")]),a("br"),a("span",{staticClass:"line-number"},[s._v("167")]),a("br"),a("span",{staticClass:"line-number"},[s._v("168")]),a("br"),a("span",{staticClass:"line-number"},[s._v("169")]),a("br"),a("span",{staticClass:"line-number"},[s._v("170")]),a("br"),a("span",{staticClass:"line-number"},[s._v("171")]),a("br"),a("span",{staticClass:"line-number"},[s._v("172")]),a("br"),a("span",{staticClass:"line-number"},[s._v("173")]),a("br"),a("span",{staticClass:"line-number"},[s._v("174")]),a("br"),a("span",{staticClass:"line-number"},[s._v("175")]),a("br"),a("span",{staticClass:"line-number"},[s._v("176")]),a("br"),a("span",{staticClass:"line-number"},[s._v("177")]),a("br"),a("span",{staticClass:"line-number"},[s._v("178")]),a("br"),a("span",{staticClass:"line-number"},[s._v("179")]),a("br"),a("span",{staticClass:"line-number"},[s._v("180")]),a("br"),a("span",{staticClass:"line-number"},[s._v("181")]),a("br"),a("span",{staticClass:"line-number"},[s._v("182")]),a("br"),a("span",{staticClass:"line-number"},[s._v("183")]),a("br"),a("span",{staticClass:"line-number"},[s._v("184")]),a("br"),a("span",{staticClass:"line-number"},[s._v("185")]),a("br"),a("span",{staticClass:"line-number"},[s._v("186")]),a("br"),a("span",{staticClass:"line-number"},[s._v("187")]),a("br"),a("span",{staticClass:"line-number"},[s._v("188")]),a("br"),a("span",{staticClass:"line-number"},[s._v("189")]),a("br"),a("span",{staticClass:"line-number"},[s._v("190")]),a("br"),a("span",{staticClass:"line-number"},[s._v("191")]),a("br"),a("span",{staticClass:"line-number"},[s._v("192")]),a("br"),a("span",{staticClass:"line-number"},[s._v("193")]),a("br"),a("span",{staticClass:"line-number"},[s._v("194")]),a("br"),a("span",{staticClass:"line-number"},[s._v("195")]),a("br"),a("span",{staticClass:"line-number"},[s._v("196")]),a("br"),a("span",{staticClass:"line-number"},[s._v("197")]),a("br"),a("span",{staticClass:"line-number"},[s._v("198")]),a("br"),a("span",{staticClass:"line-number"},[s._v("199")]),a("br"),a("span",{staticClass:"line-number"},[s._v("200")]),a("br"),a("span",{staticClass:"line-number"},[s._v("201")]),a("br"),a("span",{staticClass:"line-number"},[s._v("202")]),a("br"),a("span",{staticClass:"line-number"},[s._v("203")]),a("br"),a("span",{staticClass:"line-number"},[s._v("204")]),a("br"),a("span",{staticClass:"line-number"},[s._v("205")]),a("br"),a("span",{staticClass:"line-number"},[s._v("206")]),a("br"),a("span",{staticClass:"line-number"},[s._v("207")]),a("br"),a("span",{staticClass:"line-number"},[s._v("208")]),a("br"),a("span",{staticClass:"line-number"},[s._v("209")]),a("br"),a("span",{staticClass:"line-number"},[s._v("210")]),a("br"),a("span",{staticClass:"line-number"},[s._v("211")]),a("br"),a("span",{staticClass:"line-number"},[s._v("212")]),a("br"),a("span",{staticClass:"line-number"},[s._v("213")]),a("br"),a("span",{staticClass:"line-number"},[s._v("214")]),a("br"),a("span",{staticClass:"line-number"},[s._v("215")]),a("br"),a("span",{staticClass:"line-number"},[s._v("216")]),a("br"),a("span",{staticClass:"line-number"},[s._v("217")]),a("br"),a("span",{staticClass:"line-number"},[s._v("218")]),a("br"),a("span",{staticClass:"line-number"},[s._v("219")]),a("br"),a("span",{staticClass:"line-number"},[s._v("220")]),a("br"),a("span",{staticClass:"line-number"},[s._v("221")]),a("br"),a("span",{staticClass:"line-number"},[s._v("222")]),a("br"),a("span",{staticClass:"line-number"},[s._v("223")]),a("br"),a("span",{staticClass:"line-number"},[s._v("224")]),a("br"),a("span",{staticClass:"line-number"},[s._v("225")]),a("br"),a("span",{staticClass:"line-number"},[s._v("226")]),a("br"),a("span",{staticClass:"line-number"},[s._v("227")]),a("br"),a("span",{staticClass:"line-number"},[s._v("228")]),a("br"),a("span",{staticClass:"line-number"},[s._v("229")]),a("br"),a("span",{staticClass:"line-number"},[s._v("230")]),a("br"),a("span",{staticClass:"line-number"},[s._v("231")]),a("br"),a("span",{staticClass:"line-number"},[s._v("232")]),a("br"),a("span",{staticClass:"line-number"},[s._v("233")]),a("br"),a("span",{staticClass:"line-number"},[s._v("234")]),a("br"),a("span",{staticClass:"line-number"},[s._v("235")]),a("br"),a("span",{staticClass:"line-number"},[s._v("236")]),a("br"),a("span",{staticClass:"line-number"},[s._v("237")]),a("br"),a("span",{staticClass:"line-number"},[s._v("238")]),a("br"),a("span",{staticClass:"line-number"},[s._v("239")]),a("br"),a("span",{staticClass:"line-number"},[s._v("240")]),a("br"),a("span",{staticClass:"line-number"},[s._v("241")]),a("br"),a("span",{staticClass:"line-number"},[s._v("242")]),a("br"),a("span",{staticClass:"line-number"},[s._v("243")]),a("br"),a("span",{staticClass:"line-number"},[s._v("244")]),a("br"),a("span",{staticClass:"line-number"},[s._v("245")]),a("br"),a("span",{staticClass:"line-number"},[s._v("246")]),a("br"),a("span",{staticClass:"line-number"},[s._v("247")]),a("br"),a("span",{staticClass:"line-number"},[s._v("248")]),a("br"),a("span",{staticClass:"line-number"},[s._v("249")]),a("br"),a("span",{staticClass:"line-number"},[s._v("250")]),a("br"),a("span",{staticClass:"line-number"},[s._v("251")]),a("br"),a("span",{staticClass:"line-number"},[s._v("252")]),a("br"),a("span",{staticClass:"line-number"},[s._v("253")]),a("br"),a("span",{staticClass:"line-number"},[s._v("254")]),a("br"),a("span",{staticClass:"line-number"},[s._v("255")]),a("br"),a("span",{staticClass:"line-number"},[s._v("256")]),a("br"),a("span",{staticClass:"line-number"},[s._v("257")]),a("br"),a("span",{staticClass:"line-number"},[s._v("258")]),a("br"),a("span",{staticClass:"line-number"},[s._v("259")]),a("br"),a("span",{staticClass:"line-number"},[s._v("260")]),a("br"),a("span",{staticClass:"line-number"},[s._v("261")]),a("br"),a("span",{staticClass:"line-number"},[s._v("262")]),a("br"),a("span",{staticClass:"line-number"},[s._v("263")]),a("br"),a("span",{staticClass:"line-number"},[s._v("264")]),a("br"),a("span",{staticClass:"line-number"},[s._v("265")]),a("br"),a("span",{staticClass:"line-number"},[s._v("266")]),a("br"),a("span",{staticClass:"line-number"},[s._v("267")]),a("br"),a("span",{staticClass:"line-number"},[s._v("268")]),a("br"),a("span",{staticClass:"line-number"},[s._v("269")]),a("br"),a("span",{staticClass:"line-number"},[s._v("270")]),a("br"),a("span",{staticClass:"line-number"},[s._v("271")]),a("br"),a("span",{staticClass:"line-number"},[s._v("272")]),a("br"),a("span",{staticClass:"line-number"},[s._v("273")]),a("br"),a("span",{staticClass:"line-number"},[s._v("274")]),a("br"),a("span",{staticClass:"line-number"},[s._v("275")]),a("br"),a("span",{staticClass:"line-number"},[s._v("276")]),a("br"),a("span",{staticClass:"line-number"},[s._v("277")]),a("br"),a("span",{staticClass:"line-number"},[s._v("278")]),a("br"),a("span",{staticClass:"line-number"},[s._v("279")]),a("br"),a("span",{staticClass:"line-number"},[s._v("280")]),a("br"),a("span",{staticClass:"line-number"},[s._v("281")]),a("br"),a("span",{staticClass:"line-number"},[s._v("282")]),a("br"),a("span",{staticClass:"line-number"},[s._v("283")]),a("br"),a("span",{staticClass:"line-number"},[s._v("284")]),a("br"),a("span",{staticClass:"line-number"},[s._v("285")]),a("br"),a("span",{staticClass:"line-number"},[s._v("286")]),a("br"),a("span",{staticClass:"line-number"},[s._v("287")]),a("br"),a("span",{staticClass:"line-number"},[s._v("288")]),a("br"),a("span",{staticClass:"line-number"},[s._v("289")]),a("br"),a("span",{staticClass:"line-number"},[s._v("290")]),a("br"),a("span",{staticClass:"line-number"},[s._v("291")]),a("br"),a("span",{staticClass:"line-number"},[s._v("292")]),a("br"),a("span",{staticClass:"line-number"},[s._v("293")]),a("br"),a("span",{staticClass:"line-number"},[s._v("294")]),a("br"),a("span",{staticClass:"line-number"},[s._v("295")]),a("br"),a("span",{staticClass:"line-number"},[s._v("296")]),a("br"),a("span",{staticClass:"line-number"},[s._v("297")]),a("br"),a("span",{staticClass:"line-number"},[s._v("298")]),a("br"),a("span",{staticClass:"line-number"},[s._v("299")]),a("br"),a("span",{staticClass:"line-number"},[s._v("300")]),a("br"),a("span",{staticClass:"line-number"},[s._v("301")]),a("br"),a("span",{staticClass:"line-number"},[s._v("302")]),a("br"),a("span",{staticClass:"line-number"},[s._v("303")]),a("br"),a("span",{staticClass:"line-number"},[s._v("304")]),a("br"),a("span",{staticClass:"line-number"},[s._v("305")]),a("br"),a("span",{staticClass:"line-number"},[s._v("306")]),a("br"),a("span",{staticClass:"line-number"},[s._v("307")]),a("br"),a("span",{staticClass:"line-number"},[s._v("308")]),a("br"),a("span",{staticClass:"line-number"},[s._v("309")]),a("br"),a("span",{staticClass:"line-number"},[s._v("310")]),a("br"),a("span",{staticClass:"line-number"},[s._v("311")]),a("br"),a("span",{staticClass:"line-number"},[s._v("312")]),a("br"),a("span",{staticClass:"line-number"},[s._v("313")]),a("br"),a("span",{staticClass:"line-number"},[s._v("314")]),a("br"),a("span",{staticClass:"line-number"},[s._v("315")]),a("br"),a("span",{staticClass:"line-number"},[s._v("316")]),a("br"),a("span",{staticClass:"line-number"},[s._v("317")]),a("br"),a("span",{staticClass:"line-number"},[s._v("318")]),a("br"),a("span",{staticClass:"line-number"},[s._v("319")]),a("br"),a("span",{staticClass:"line-number"},[s._v("320")]),a("br"),a("span",{staticClass:"line-number"},[s._v("321")]),a("br"),a("span",{staticClass:"line-number"},[s._v("322")]),a("br"),a("span",{staticClass:"line-number"},[s._v("323")]),a("br"),a("span",{staticClass:"line-number"},[s._v("324")]),a("br"),a("span",{staticClass:"line-number"},[s._v("325")]),a("br"),a("span",{staticClass:"line-number"},[s._v("326")]),a("br"),a("span",{staticClass:"line-number"},[s._v("327")]),a("br"),a("span",{staticClass:"line-number"},[s._v("328")]),a("br"),a("span",{staticClass:"line-number"},[s._v("329")]),a("br"),a("span",{staticClass:"line-number"},[s._v("330")]),a("br"),a("span",{staticClass:"line-number"},[s._v("331")]),a("br"),a("span",{staticClass:"line-number"},[s._v("332")]),a("br"),a("span",{staticClass:"line-number"},[s._v("333")]),a("br"),a("span",{staticClass:"line-number"},[s._v("334")]),a("br"),a("span",{staticClass:"line-number"},[s._v("335")]),a("br"),a("span",{staticClass:"line-number"},[s._v("336")]),a("br"),a("span",{staticClass:"line-number"},[s._v("337")]),a("br"),a("span",{staticClass:"line-number"},[s._v("338")]),a("br"),a("span",{staticClass:"line-number"},[s._v("339")]),a("br"),a("span",{staticClass:"line-number"},[s._v("340")]),a("br"),a("span",{staticClass:"line-number"},[s._v("341")]),a("br"),a("span",{staticClass:"line-number"},[s._v("342")]),a("br"),a("span",{staticClass:"line-number"},[s._v("343")]),a("br"),a("span",{staticClass:"line-number"},[s._v("344")]),a("br"),a("span",{staticClass:"line-number"},[s._v("345")]),a("br"),a("span",{staticClass:"line-number"},[s._v("346")]),a("br"),a("span",{staticClass:"line-number"},[s._v("347")]),a("br"),a("span",{staticClass:"line-number"},[s._v("348")]),a("br"),a("span",{staticClass:"line-number"},[s._v("349")]),a("br"),a("span",{staticClass:"line-number"},[s._v("350")]),a("br"),a("span",{staticClass:"line-number"},[s._v("351")]),a("br"),a("span",{staticClass:"line-number"},[s._v("352")]),a("br"),a("span",{staticClass:"line-number"},[s._v("353")]),a("br"),a("span",{staticClass:"line-number"},[s._v("354")]),a("br"),a("span",{staticClass:"line-number"},[s._v("355")]),a("br"),a("span",{staticClass:"line-number"},[s._v("356")]),a("br"),a("span",{staticClass:"line-number"},[s._v("357")]),a("br"),a("span",{staticClass:"line-number"},[s._v("358")]),a("br"),a("span",{staticClass:"line-number"},[s._v("359")]),a("br"),a("span",{staticClass:"line-number"},[s._v("360")]),a("br"),a("span",{staticClass:"line-number"},[s._v("361")]),a("br"),a("span",{staticClass:"line-number"},[s._v("362")]),a("br"),a("span",{staticClass:"line-number"},[s._v("363")]),a("br"),a("span",{staticClass:"line-number"},[s._v("364")]),a("br"),a("span",{staticClass:"line-number"},[s._v("365")]),a("br"),a("span",{staticClass:"line-number"},[s._v("366")]),a("br"),a("span",{staticClass:"line-number"},[s._v("367")]),a("br"),a("span",{staticClass:"line-number"},[s._v("368")]),a("br"),a("span",{staticClass:"line-number"},[s._v("369")]),a("br"),a("span",{staticClass:"line-number"},[s._v("370")]),a("br"),a("span",{staticClass:"line-number"},[s._v("371")]),a("br"),a("span",{staticClass:"line-number"},[s._v("372")]),a("br"),a("span",{staticClass:"line-number"},[s._v("373")]),a("br"),a("span",{staticClass:"line-number"},[s._v("374")]),a("br"),a("span",{staticClass:"line-number"},[s._v("375")]),a("br"),a("span",{staticClass:"line-number"},[s._v("376")]),a("br"),a("span",{staticClass:"line-number"},[s._v("377")]),a("br"),a("span",{staticClass:"line-number"},[s._v("378")]),a("br"),a("span",{staticClass:"line-number"},[s._v("379")]),a("br"),a("span",{staticClass:"line-number"},[s._v("380")]),a("br"),a("span",{staticClass:"line-number"},[s._v("381")]),a("br"),a("span",{staticClass:"line-number"},[s._v("382")]),a("br"),a("span",{staticClass:"line-number"},[s._v("383")]),a("br"),a("span",{staticClass:"line-number"},[s._v("384")]),a("br"),a("span",{staticClass:"line-number"},[s._v("385")]),a("br"),a("span",{staticClass:"line-number"},[s._v("386")]),a("br"),a("span",{staticClass:"line-number"},[s._v("387")]),a("br"),a("span",{staticClass:"line-number"},[s._v("388")]),a("br"),a("span",{staticClass:"line-number"},[s._v("389")]),a("br"),a("span",{staticClass:"line-number"},[s._v("390")]),a("br"),a("span",{staticClass:"line-number"},[s._v("391")]),a("br"),a("span",{staticClass:"line-number"},[s._v("392")]),a("br"),a("span",{staticClass:"line-number"},[s._v("393")]),a("br"),a("span",{staticClass:"line-number"},[s._v("394")]),a("br"),a("span",{staticClass:"line-number"},[s._v("395")]),a("br"),a("span",{staticClass:"line-number"},[s._v("396")]),a("br"),a("span",{staticClass:"line-number"},[s._v("397")]),a("br"),a("span",{staticClass:"line-number"},[s._v("398")]),a("br"),a("span",{staticClass:"line-number"},[s._v("399")]),a("br"),a("span",{staticClass:"line-number"},[s._v("400")]),a("br"),a("span",{staticClass:"line-number"},[s._v("401")]),a("br"),a("span",{staticClass:"line-number"},[s._v("402")]),a("br"),a("span",{staticClass:"line-number"},[s._v("403")]),a("br"),a("span",{staticClass:"line-number"},[s._v("404")]),a("br"),a("span",{staticClass:"line-number"},[s._v("405")]),a("br"),a("span",{staticClass:"line-number"},[s._v("406")]),a("br"),a("span",{staticClass:"line-number"},[s._v("407")]),a("br"),a("span",{staticClass:"line-number"},[s._v("408")]),a("br"),a("span",{staticClass:"line-number"},[s._v("409")]),a("br"),a("span",{staticClass:"line-number"},[s._v("410")]),a("br"),a("span",{staticClass:"line-number"},[s._v("411")]),a("br"),a("span",{staticClass:"line-number"},[s._v("412")]),a("br"),a("span",{staticClass:"line-number"},[s._v("413")]),a("br"),a("span",{staticClass:"line-number"},[s._v("414")]),a("br"),a("span",{staticClass:"line-number"},[s._v("415")]),a("br"),a("span",{staticClass:"line-number"},[s._v("416")]),a("br"),a("span",{staticClass:"line-number"},[s._v("417")]),a("br"),a("span",{staticClass:"line-number"},[s._v("418")]),a("br"),a("span",{staticClass:"line-number"},[s._v("419")]),a("br"),a("span",{staticClass:"line-number"},[s._v("420")]),a("br"),a("span",{staticClass:"line-number"},[s._v("421")]),a("br"),a("span",{staticClass:"line-number"},[s._v("422")]),a("br"),a("span",{staticClass:"line-number"},[s._v("423")]),a("br"),a("span",{staticClass:"line-number"},[s._v("424")]),a("br"),a("span",{staticClass:"line-number"},[s._v("425")]),a("br"),a("span",{staticClass:"line-number"},[s._v("426")]),a("br"),a("span",{staticClass:"line-number"},[s._v("427")]),a("br"),a("span",{staticClass:"line-number"},[s._v("428")]),a("br"),a("span",{staticClass:"line-number"},[s._v("429")]),a("br"),a("span",{staticClass:"line-number"},[s._v("430")]),a("br"),a("span",{staticClass:"line-number"},[s._v("431")]),a("br"),a("span",{staticClass:"line-number"},[s._v("432")]),a("br"),a("span",{staticClass:"line-number"},[s._v("433")]),a("br"),a("span",{staticClass:"line-number"},[s._v("434")]),a("br"),a("span",{staticClass:"line-number"},[s._v("435")]),a("br"),a("span",{staticClass:"line-number"},[s._v("436")]),a("br"),a("span",{staticClass:"line-number"},[s._v("437")]),a("br"),a("span",{staticClass:"line-number"},[s._v("438")]),a("br"),a("span",{staticClass:"line-number"},[s._v("439")]),a("br"),a("span",{staticClass:"line-number"},[s._v("440")]),a("br"),a("span",{staticClass:"line-number"},[s._v("441")]),a("br"),a("span",{staticClass:"line-number"},[s._v("442")]),a("br"),a("span",{staticClass:"line-number"},[s._v("443")]),a("br"),a("span",{staticClass:"line-number"},[s._v("444")]),a("br"),a("span",{staticClass:"line-number"},[s._v("445")]),a("br"),a("span",{staticClass:"line-number"},[s._v("446")]),a("br"),a("span",{staticClass:"line-number"},[s._v("447")]),a("br"),a("span",{staticClass:"line-number"},[s._v("448")]),a("br"),a("span",{staticClass:"line-number"},[s._v("449")]),a("br"),a("span",{staticClass:"line-number"},[s._v("450")]),a("br"),a("span",{staticClass:"line-number"},[s._v("451")]),a("br"),a("span",{staticClass:"line-number"},[s._v("452")]),a("br"),a("span",{staticClass:"line-number"},[s._v("453")]),a("br"),a("span",{staticClass:"line-number"},[s._v("454")]),a("br"),a("span",{staticClass:"line-number"},[s._v("455")]),a("br"),a("span",{staticClass:"line-number"},[s._v("456")]),a("br"),a("span",{staticClass:"line-number"},[s._v("457")]),a("br"),a("span",{staticClass:"line-number"},[s._v("458")]),a("br"),a("span",{staticClass:"line-number"},[s._v("459")]),a("br"),a("span",{staticClass:"line-number"},[s._v("460")]),a("br"),a("span",{staticClass:"line-number"},[s._v("461")]),a("br"),a("span",{staticClass:"line-number"},[s._v("462")]),a("br"),a("span",{staticClass:"line-number"},[s._v("463")]),a("br"),a("span",{staticClass:"line-number"},[s._v("464")]),a("br"),a("span",{staticClass:"line-number"},[s._v("465")]),a("br"),a("span",{staticClass:"line-number"},[s._v("466")]),a("br"),a("span",{staticClass:"line-number"},[s._v("467")]),a("br"),a("span",{staticClass:"line-number"},[s._v("468")]),a("br"),a("span",{staticClass:"line-number"},[s._v("469")]),a("br"),a("span",{staticClass:"line-number"},[s._v("470")]),a("br"),a("span",{staticClass:"line-number"},[s._v("471")]),a("br"),a("span",{staticClass:"line-number"},[s._v("472")]),a("br"),a("span",{staticClass:"line-number"},[s._v("473")]),a("br"),a("span",{staticClass:"line-number"},[s._v("474")]),a("br"),a("span",{staticClass:"line-number"},[s._v("475")]),a("br"),a("span",{staticClass:"line-number"},[s._v("476")]),a("br"),a("span",{staticClass:"line-number"},[s._v("477")]),a("br"),a("span",{staticClass:"line-number"},[s._v("478")]),a("br"),a("span",{staticClass:"line-number"},[s._v("479")]),a("br"),a("span",{staticClass:"line-number"},[s._v("480")]),a("br"),a("span",{staticClass:"line-number"},[s._v("481")]),a("br"),a("span",{staticClass:"line-number"},[s._v("482")]),a("br"),a("span",{staticClass:"line-number"},[s._v("483")]),a("br"),a("span",{staticClass:"line-number"},[s._v("484")]),a("br"),a("span",{staticClass:"line-number"},[s._v("485")]),a("br"),a("span",{staticClass:"line-number"},[s._v("486")]),a("br"),a("span",{staticClass:"line-number"},[s._v("487")]),a("br"),a("span",{staticClass:"line-number"},[s._v("488")]),a("br"),a("span",{staticClass:"line-number"},[s._v("489")]),a("br"),a("span",{staticClass:"line-number"},[s._v("490")]),a("br"),a("span",{staticClass:"line-number"},[s._v("491")]),a("br"),a("span",{staticClass:"line-number"},[s._v("492")]),a("br"),a("span",{staticClass:"line-number"},[s._v("493")]),a("br"),a("span",{staticClass:"line-number"},[s._v("494")]),a("br"),a("span",{staticClass:"line-number"},[s._v("495")]),a("br"),a("span",{staticClass:"line-number"},[s._v("496")]),a("br"),a("span",{staticClass:"line-number"},[s._v("497")]),a("br"),a("span",{staticClass:"line-number"},[s._v("498")]),a("br"),a("span",{staticClass:"line-number"},[s._v("499")]),a("br"),a("span",{staticClass:"line-number"},[s._v("500")]),a("br"),a("span",{staticClass:"line-number"},[s._v("501")]),a("br"),a("span",{staticClass:"line-number"},[s._v("502")]),a("br"),a("span",{staticClass:"line-number"},[s._v("503")]),a("br"),a("span",{staticClass:"line-number"},[s._v("504")]),a("br"),a("span",{staticClass:"line-number"},[s._v("505")]),a("br"),a("span",{staticClass:"line-number"},[s._v("506")]),a("br"),a("span",{staticClass:"line-number"},[s._v("507")]),a("br"),a("span",{staticClass:"line-number"},[s._v("508")]),a("br"),a("span",{staticClass:"line-number"},[s._v("509")]),a("br"),a("span",{staticClass:"line-number"},[s._v("510")]),a("br"),a("span",{staticClass:"line-number"},[s._v("511")]),a("br"),a("span",{staticClass:"line-number"},[s._v("512")]),a("br"),a("span",{staticClass:"line-number"},[s._v("513")]),a("br"),a("span",{staticClass:"line-number"},[s._v("514")]),a("br"),a("span",{staticClass:"line-number"},[s._v("515")]),a("br"),a("span",{staticClass:"line-number"},[s._v("516")]),a("br"),a("span",{staticClass:"line-number"},[s._v("517")]),a("br"),a("span",{staticClass:"line-number"},[s._v("518")]),a("br"),a("span",{staticClass:"line-number"},[s._v("519")]),a("br"),a("span",{staticClass:"line-number"},[s._v("520")]),a("br"),a("span",{staticClass:"line-number"},[s._v("521")]),a("br"),a("span",{staticClass:"line-number"},[s._v("522")]),a("br"),a("span",{staticClass:"line-number"},[s._v("523")]),a("br"),a("span",{staticClass:"line-number"},[s._v("524")]),a("br"),a("span",{staticClass:"line-number"},[s._v("525")]),a("br"),a("span",{staticClass:"line-number"},[s._v("526")]),a("br"),a("span",{staticClass:"line-number"},[s._v("527")]),a("br"),a("span",{staticClass:"line-number"},[s._v("528")]),a("br"),a("span",{staticClass:"line-number"},[s._v("529")]),a("br"),a("span",{staticClass:"line-number"},[s._v("530")]),a("br"),a("span",{staticClass:"line-number"},[s._v("531")]),a("br"),a("span",{staticClass:"line-number"},[s._v("532")]),a("br"),a("span",{staticClass:"line-number"},[s._v("533")]),a("br"),a("span",{staticClass:"line-number"},[s._v("534")]),a("br"),a("span",{staticClass:"line-number"},[s._v("535")]),a("br"),a("span",{staticClass:"line-number"},[s._v("536")]),a("br"),a("span",{staticClass:"line-number"},[s._v("537")]),a("br"),a("span",{staticClass:"line-number"},[s._v("538")]),a("br"),a("span",{staticClass:"line-number"},[s._v("539")]),a("br"),a("span",{staticClass:"line-number"},[s._v("540")]),a("br"),a("span",{staticClass:"line-number"},[s._v("541")]),a("br"),a("span",{staticClass:"line-number"},[s._v("542")]),a("br"),a("span",{staticClass:"line-number"},[s._v("543")]),a("br"),a("span",{staticClass:"line-number"},[s._v("544")]),a("br"),a("span",{staticClass:"line-number"},[s._v("545")]),a("br"),a("span",{staticClass:"line-number"},[s._v("546")]),a("br"),a("span",{staticClass:"line-number"},[s._v("547")]),a("br"),a("span",{staticClass:"line-number"},[s._v("548")]),a("br"),a("span",{staticClass:"line-number"},[s._v("549")]),a("br"),a("span",{staticClass:"line-number"},[s._v("550")]),a("br"),a("span",{staticClass:"line-number"},[s._v("551")]),a("br"),a("span",{staticClass:"line-number"},[s._v("552")]),a("br"),a("span",{staticClass:"line-number"},[s._v("553")]),a("br"),a("span",{staticClass:"line-number"},[s._v("554")]),a("br"),a("span",{staticClass:"line-number"},[s._v("555")]),a("br"),a("span",{staticClass:"line-number"},[s._v("556")]),a("br"),a("span",{staticClass:"line-number"},[s._v("557")]),a("br"),a("span",{staticClass:"line-number"},[s._v("558")]),a("br"),a("span",{staticClass:"line-number"},[s._v("559")]),a("br"),a("span",{staticClass:"line-number"},[s._v("560")]),a("br"),a("span",{staticClass:"line-number"},[s._v("561")]),a("br"),a("span",{staticClass:"line-number"},[s._v("562")]),a("br"),a("span",{staticClass:"line-number"},[s._v("563")]),a("br"),a("span",{staticClass:"line-number"},[s._v("564")]),a("br"),a("span",{staticClass:"line-number"},[s._v("565")]),a("br"),a("span",{staticClass:"line-number"},[s._v("566")]),a("br"),a("span",{staticClass:"line-number"},[s._v("567")]),a("br"),a("span",{staticClass:"line-number"},[s._v("568")]),a("br"),a("span",{staticClass:"line-number"},[s._v("569")]),a("br"),a("span",{staticClass:"line-number"},[s._v("570")]),a("br"),a("span",{staticClass:"line-number"},[s._v("571")]),a("br"),a("span",{staticClass:"line-number"},[s._v("572")]),a("br"),a("span",{staticClass:"line-number"},[s._v("573")]),a("br"),a("span",{staticClass:"line-number"},[s._v("574")]),a("br"),a("span",{staticClass:"line-number"},[s._v("575")]),a("br"),a("span",{staticClass:"line-number"},[s._v("576")]),a("br"),a("span",{staticClass:"line-number"},[s._v("577")]),a("br"),a("span",{staticClass:"line-number"},[s._v("578")]),a("br"),a("span",{staticClass:"line-number"},[s._v("579")]),a("br"),a("span",{staticClass:"line-number"},[s._v("580")]),a("br"),a("span",{staticClass:"line-number"},[s._v("581")]),a("br"),a("span",{staticClass:"line-number"},[s._v("582")]),a("br"),a("span",{staticClass:"line-number"},[s._v("583")]),a("br"),a("span",{staticClass:"line-number"},[s._v("584")]),a("br"),a("span",{staticClass:"line-number"},[s._v("585")]),a("br"),a("span",{staticClass:"line-number"},[s._v("586")]),a("br"),a("span",{staticClass:"line-number"},[s._v("587")]),a("br"),a("span",{staticClass:"line-number"},[s._v("588")]),a("br"),a("span",{staticClass:"line-number"},[s._v("589")]),a("br"),a("span",{staticClass:"line-number"},[s._v("590")]),a("br"),a("span",{staticClass:"line-number"},[s._v("591")]),a("br"),a("span",{staticClass:"line-number"},[s._v("592")]),a("br"),a("span",{staticClass:"line-number"},[s._v("593")]),a("br"),a("span",{staticClass:"line-number"},[s._v("594")]),a("br"),a("span",{staticClass:"line-number"},[s._v("595")]),a("br"),a("span",{staticClass:"line-number"},[s._v("596")]),a("br"),a("span",{staticClass:"line-number"},[s._v("597")]),a("br"),a("span",{staticClass:"line-number"},[s._v("598")]),a("br"),a("span",{staticClass:"line-number"},[s._v("599")]),a("br"),a("span",{staticClass:"line-number"},[s._v("600")]),a("br"),a("span",{staticClass:"line-number"},[s._v("601")]),a("br"),a("span",{staticClass:"line-number"},[s._v("602")]),a("br"),a("span",{staticClass:"line-number"},[s._v("603")]),a("br"),a("span",{staticClass:"line-number"},[s._v("604")]),a("br"),a("span",{staticClass:"line-number"},[s._v("605")]),a("br"),a("span",{staticClass:"line-number"},[s._v("606")]),a("br"),a("span",{staticClass:"line-number"},[s._v("607")]),a("br"),a("span",{staticClass:"line-number"},[s._v("608")]),a("br"),a("span",{staticClass:"line-number"},[s._v("609")]),a("br"),a("span",{staticClass:"line-number"},[s._v("610")]),a("br"),a("span",{staticClass:"line-number"},[s._v("611")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);